# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous Integration Workflow
on:
  pull_request:
    branches: [ master ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Check javscript formatting and linting (prettier, eslint)
      run: |
      npm install
      npm run format
      npm run lint
    - name: Set up python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Check pycodestyle (flake8)
      run: |
      pip install --upgrade flake8
      # check for syntax errors 
      flake8 tests --count --select=E9,F63,F7,F82 --show-source --statistics
      # check for formatting errors
      flake8 tests --count --ignore=E222,E501,W503,F401,F841,F811 --show-source --statistics
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements.txt
        npm install --ignore-scripts
    - name: Build Component
      run: npm run build
    - name: Build Validation
      run: python _validate_init.py
    - name: Check generated code for syntax errors (flake8)
      run: |
      # fail on syntax errors 
      flake8 dash_extendable_graph --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Run Integration Tests (pytest/dash[testing])
      run: pytest tests
